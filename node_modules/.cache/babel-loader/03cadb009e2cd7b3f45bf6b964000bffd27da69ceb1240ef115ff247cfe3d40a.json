{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from \"react\";\nimport classes from \"./hoc/Layout/Layout.module.css\";\nimport PlayGame from \"./containers/main/PlayGame\";\nimport SignDoc from \"./containers/main/SignDoc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xf1a85fe5ac5a55Da9C661e6d0ef581fCd0643a47\";\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n    console.log(contract);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Layout,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(SignDoc, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TZSpH2jnFmmTzG/R7lX3w+tUfzU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","classes","PlayGame","SignDoc","jsxDEV","_jsxDEV","App","_s","contractAddress","errorMessage","setErrorMessage","useState","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","currentContractVal","setCurrentContractVal","provider","setProvider","signer","setSigner","contract","setContract","option","setOptionNum","computerOption","setOptionCompNum","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","ethers","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","SimpleStorage_abi","className","Layout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./hoc/Layout/Layout.module.css\";\n\nimport PlayGame from \"./containers/main/PlayGame\";\nimport SignDoc from \"./containers/main/SignDoc\";\n\nfunction App() {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xf1a85fe5ac5a55Da9C661e6d0ef581fCd0643a47\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n\n    setContract(tempContract);\n    console.log(contract);\n  };\n\n  return (\n    <div className={classes.Layout}>\n      <main>\n        {/* <PlayGame /> */}\n        <SignDoc />\n      </main>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}