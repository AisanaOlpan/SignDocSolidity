{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\nimport classes from \"./SignDoc.module.css\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorage = () => {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x37bb9D77b1d732654bC02E044Db42C7714bD6a7E\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n  const [whiteList, setWhiteList] = useState([]);\n  var data = [];\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n        //   const txResponse = contract.whiteList();\n        //   const data = getData();\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n  async function getData() {\n    //\n    console.log(data);\n    if (data.length == 0) {\n      console.log(data);\n      var isWitelist = document.getElementById(\"witelist\");\n      const txResponse = await contract.getWhiteList();\n      // let val = Object.entries(txResponse);\n      // let arr = txResponse;\n      // console.log(val);\n      // console.log(typeof txResponse);\n      // console.log(txResponse);\n      setWhiteList(whiteList, txResponse);\n      console.log(txResponse);\n      for (let i = 0; i < txResponse.length; i++) {\n        var h6 = document.createElement(\"h6\");\n        h6.innerText = txResponse[i];\n        isWitelist.appendChild(h6);\n        data.push(txResponse[i]);\n      }\n    }\n    //\n  }\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n    data = getData();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n    // console.log(contract);\n  };\n\n  const playGame = async event => {\n    event.preventDefault();\n    let option = parseInt(event.target.attributes.values.value);\n    if (contract != null) {\n      const txResponse = await contract.requestRandomNum();\n      //   const txReceipt = txResponse.wait(1);\n\n      console.log(txResponse);\n      const res = await contract.playGame(option);\n      const isWin = await contract.getResult();\n      console.log(res.Promise);\n      if (isWin && res != null) {\n        setOptionNum(option + 1);\n      } else {\n        setOptionCompNum(computerOption + 1);\n      }\n\n      //   console.log(res);\n      //   getOption();\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h4> {\"Get/Set Contract interaction\"} </h4>\n  //       <button onClick={connectWalletHandler}>{connButtonText}</button>\n  //       <div>\n  //         <h3>Address: {defaultAccount}</h3>\n  //       </div>\n  //       <form onSubmit={setHandler}>\n  //         <input id=\"setText\" type=\"text\" />\n  //         <button type={\"submit\"}> Update Contract </button>\n  //       </form>\n  //       <div>\n  //         <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n  //           {\" \"}\n  //           Get Current Contract Value{\" \"}\n  //         </button>\n  //       </div>\n  //       {currentContractVal}\n  //       {errorMessage}\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blockWallet,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        className: classes.btnWallet,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blockCenter,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0414\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0438 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockSigner,\n          id: \"witelist\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            id: \"resOptionComp\",\n            children: \" \\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u043D\\u0442\\u044B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: () => {},\n        value: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleStorage, \"WO7PzpnPLI342c5NOfUdRUAj5H0=\");\n_c = SimpleStorage;\nexport default SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["React","useState","ethers","SimpleStorage_abi","classes","Button","jsxDEV","_jsxDEV","SimpleStorage","_s","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","currentContractVal","setCurrentContractVal","provider","setProvider","signer","setSigner","contract","setContract","option","setOptionNum","computerOption","setOptionCompNum","whiteList","setWhiteList","data","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","getData","length","isWitelist","document","getElementById","txResponse","getWhiteList","i","h6","createElement","innerText","appendChild","push","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","playGame","event","preventDefault","parseInt","target","attributes","values","value","requestRandomNum","res","isWin","getResult","Promise","className","Container","children","blockWallet","onClick","btnWallet","fileName","_jsxFileName","lineNumber","columnNumber","Main","blockCenter","blockSigner","id","blockChoice","type","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\n\nimport classes from \"./SignDoc.module.css\";\nimport Button from \"../../components/Button/Button\";\n\nconst SimpleStorage = () => {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x37bb9D77b1d732654bC02E044Db42C7714bD6a7E\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n  const [whiteList, setWhiteList] = useState([]);\n  var data = [];\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n          //   const txResponse = contract.whiteList();\n          //   const data = getData();\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  async function getData() {\n    //\n    console.log(data);\n    if (data.length == 0) {\n      console.log(data);\n      var isWitelist = document.getElementById(\"witelist\");\n\n      const txResponse = await contract.getWhiteList();\n      // let val = Object.entries(txResponse);\n      // let arr = txResponse;\n      // console.log(val);\n      // console.log(typeof txResponse);\n      // console.log(txResponse);\n      setWhiteList(whiteList, txResponse);\n\n      console.log(txResponse);\n      for (let i = 0; i < txResponse.length; i++) {\n        var h6 = document.createElement(\"h6\");\n        h6.innerText = txResponse[i];\n        isWitelist.appendChild(h6);\n        data.push(txResponse[i]);\n      }\n    }\n    //\n  }\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n    data = getData();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n\n    setContract(tempContract);\n    // console.log(contract);\n  };\n\n  const playGame = async (event) => {\n    event.preventDefault();\n\n    let option = parseInt(event.target.attributes.values.value);\n\n    if (contract != null) {\n      const txResponse = await contract.requestRandomNum();\n      //   const txReceipt = txResponse.wait(1);\n\n      console.log(txResponse);\n      const res = await contract.playGame(option);\n\n      const isWin = await contract.getResult();\n      console.log(res.Promise);\n      if (isWin && res != null) {\n        setOptionNum(option + 1);\n      } else {\n        setOptionCompNum(computerOption + 1);\n      }\n\n      //   console.log(res);\n      //   getOption();\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h4> {\"Get/Set Contract interaction\"} </h4>\n  //       <button onClick={connectWalletHandler}>{connButtonText}</button>\n  //       <div>\n  //         <h3>Address: {defaultAccount}</h3>\n  //       </div>\n  //       <form onSubmit={setHandler}>\n  //         <input id=\"setText\" type=\"text\" />\n  //         <button type={\"submit\"}> Update Contract </button>\n  //       </form>\n  //       <div>\n  //         <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n  //           {\" \"}\n  //           Get Current Contract Value{\" \"}\n  //         </button>\n  //       </div>\n  //       {currentContractVal}\n  //       {errorMessage}\n  //     </div>\n  //   );\n  return (\n    <div className={classes.Container}>\n      <div className={classes.blockWallet}>\n        <button onClick={connectWalletHandler} className={classes.btnWallet}>\n          {connButtonText}\n        </button>\n        <h5> {defaultAccount}</h5>\n      </div>\n      <div className={classes.Main}>\n        <div className={classes.blockCenter}>\n          <h1>Договор подписи </h1>\n\n          <div className={classes.blockSigner} id=\"witelist\">\n            <h6 id=\"resOptionComp\"> Подписанты:</h6>\n            {/* <div id=\"witelist\"></div> */}\n            {/* <h6>{computerOption}</h6> */}\n            {/* <h6 id=\"resOption\">{option}</h6> */}\n          </div>\n          <div className={classes.blockChoice}></div>\n        </div>\n        <Button type=\"submit\" onClick={() => {}} value=\"Подписать\"></Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}