{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\nimport classes from \"./SignDoc.module.css\";\nimport IconDone from \"../../components/Icons/Done\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorage = () => {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x37bb9D77b1d732654bC02E044Db42C7714bD6a7E\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  var i = 0;\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n  const getData = async () => {\n    // console.log(typeof defaultAccount);\n\n    if (contract == null) {\n      return;\n    }\n    const txSign = await contract.signDocument();\n\n    // const txResponse = await contract.getWhiteList();\n    let addr;\n    if (typeof defaultAccount == typeof \"\") {\n      addr = defaultAccount;\n    } else {\n      addr = defaultAccount[0];\n    }\n    console.log(addr);\n\n    // for (let i = 0; i < txResponse.length; i++) {\n    let isWitelist_div = document.getElementById(\"witelist_div\" + i);\n    let isWitelist = document.getElementById(\"witelist\");\n    let div_ = document.createElement(\"div\");\n    div_.id = \"witelist_div\" + i;\n    div_.className = classes.witelist_div;\n    isWitelist.appendChild(div_);\n    let h6 = document.createElement(\"h6\");\n    h6.innerText = addr;\n    isWitelist_div.appendChild(h6);\n    const isSign = contract.isSigned(addr);\n    if (isSign) {\n      let img = document.createElement(\"img\");\n      img.src = \"images/check.png\";\n      isWitelist_div.appendChild(img);\n    } else {}\n\n    // }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n\n    // console.log(tempSigner);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blockWallet,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        className: classes.btnWallet,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blockCenter,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0414\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0438 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockSigner,\n          id: \"witelist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        onClick: getData,\n        children: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleStorage, \"ictNCbmp0+ILFPlV8PvHWDJL4J8=\");\n_c = SimpleStorage;\nexport default SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["React","useState","ethers","SimpleStorage_abi","classes","IconDone","jsxDEV","_jsxDEV","SimpleStorage","_s","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","i","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","getData","txSign","signDocument","addr","isWitelist_div","document","getElementById","isWitelist","div_","createElement","id","className","witelist_div","appendChild","h6","innerText","isSign","isSigned","img","src","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","Container","children","blockWallet","onClick","btnWallet","fileName","_jsxFileName","lineNumber","columnNumber","Main","blockCenter","blockSigner","blockChoice","Button","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\n\nimport classes from \"./SignDoc.module.css\";\nimport IconDone from \"../../components/Icons/Done\";\n\nconst SimpleStorage = () => {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x37bb9D77b1d732654bC02E044Db42C7714bD6a7E\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  var i = 0;\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  const getData = async () => {\n    // console.log(typeof defaultAccount);\n\n    if (contract == null) {\n      return;\n    }\n    const txSign = await contract.signDocument();\n\n    // const txResponse = await contract.getWhiteList();\n    let addr;\n    if (typeof defaultAccount == typeof \"\") {\n      addr = defaultAccount;\n    } else {\n      addr = defaultAccount[0];\n    }\n    console.log(addr);\n\n    // for (let i = 0; i < txResponse.length; i++) {\n    let isWitelist_div = document.getElementById(\"witelist_div\" + i);\n    let isWitelist = document.getElementById(\"witelist\");\n    let div_ = document.createElement(\"div\");\n    div_.id = \"witelist_div\" + i;\n    div_.className = classes.witelist_div;\n\n    isWitelist.appendChild(div_);\n\n    let h6 = document.createElement(\"h6\");\n    h6.innerText = addr;\n    isWitelist_div.appendChild(h6);\n\n    const isSign = contract.isSigned(addr);\n    if (isSign) {\n      let img = document.createElement(\"img\");\n      img.src = \"images/check.png\";\n      isWitelist_div.appendChild(img);\n    } else {\n    }\n\n    // }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n\n    setContract(tempContract);\n\n    // console.log(tempSigner);\n  };\n\n  return (\n    <div className={classes.Container}>\n      <div className={classes.blockWallet}>\n        <button onClick={connectWalletHandler} className={classes.btnWallet}>\n          {connButtonText}\n        </button>\n        <h5> {defaultAccount}</h5>\n      </div>\n      <div className={classes.Main}>\n        <div className={classes.blockCenter}>\n          <h1>Договор подписи </h1>\n\n          <div className={classes.blockSigner} id=\"witelist\"></div>\n          <div className={classes.blockChoice}></div>\n        </div>\n        <button className={classes.Button} onClick={getData}>\n          Подписать\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}