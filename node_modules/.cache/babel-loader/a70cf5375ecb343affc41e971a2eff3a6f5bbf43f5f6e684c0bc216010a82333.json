{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SimpleStorage.js\",\n  _s = $RefreshSig$();\n// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/SimpleStorage_abi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorage = () => {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xCF31E7c9E7854D7Ecd3F3151a9979BC2a82B4fe3\";\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [currentContractVal, setCurrentContractVal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n  };\n  const setHandler = event => {\n    event.preventDefault();\n    console.log(\"sending \" + event.target.setText.value + \" to the contract\");\n    contract.set(event.target.setText.value);\n  };\n  const getCurrentVal = async () => {\n    let val = await contract.get();\n    setCurrentContractVal(val);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", \"Get/Set Contract interaction\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"setText\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Update Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getCurrentVal,\n        style: {\n          marginTop: \"5em\"\n        },\n        children: [\" \", \"Get Current Contract Value\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), currentContractVal, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleStorage, \"WeT182Q2fZaAhcR88HPrr17GPhw=\");\n_c = SimpleStorage;\nexport default SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["React","useState","ethers","SimpleStorage_abi","jsxDEV","_jsxDEV","SimpleStorage","_s","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","currentContractVal","setCurrentContractVal","provider","setProvider","signer","setSigner","contract","setContract","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","setHandler","event","preventDefault","target","setText","value","set","getCurrentVal","val","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","id","type","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SimpleStorage.js"],"sourcesContent":["// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/SimpleStorage_abi.json\";\n\nconst SimpleStorage = () => {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xCF31E7c9E7854D7Ecd3F3151a9979BC2a82B4fe3\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [currentContractVal, setCurrentContractVal] = useState(null);\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n    setContract(tempContract);\n  };\n\n  const setHandler = (event) => {\n    event.preventDefault();\n    console.log(\"sending \" + event.target.setText.value + \" to the contract\");\n    contract.set(event.target.setText.value);\n  };\n\n  const getCurrentVal = async () => {\n    let val = await contract.get();\n    setCurrentContractVal(val);\n  };\n\n  return (\n    <div>\n      <h4> {\"Get/Set Contract interaction\"} </h4>\n      <button onClick={connectWalletHandler}>{connButtonText}</button>\n      <div>\n        <h3>Address: {defaultAccount}</h3>\n      </div>\n      <form onSubmit={setHandler}>\n        <input id=\"setText\" type=\"text\" />\n        <button type={\"submit\"}> Update Contract </button>\n      </form>\n      <div>\n        <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n          {\" \"}\n          Get Current Contract Value{\" \"}\n        </button>\n      </div>\n      {currentContractVal}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default SimpleStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}