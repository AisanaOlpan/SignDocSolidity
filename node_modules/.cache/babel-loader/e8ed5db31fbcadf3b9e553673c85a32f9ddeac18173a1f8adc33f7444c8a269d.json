{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/SimpleStorage_abi.json\";\nimport classes from \"./SignDoc.module.css\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorage = () => {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x24509385D9070687b1a816858D26Ae610053fd91\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n    console.log(contract);\n  };\n  const playGame = async event => {\n    event.preventDefault();\n    let option = parseInt(event.target.attributes.values.value);\n    if (contract != null) {\n      const txResponse = await contract.requestRandomNum();\n      //   const txReceipt = txResponse.wait(1);\n\n      console.log(txResponse);\n      const res = await contract.playGame(option);\n      const isWin = await contract.getResult();\n      console.log(res.Promise);\n      if (isWin && res != null) {\n        setOptionNum(option + 1);\n      } else {\n        setOptionCompNum(computerOption + 1);\n      }\n\n      //   console.log(res);\n      //   getOption();\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h4> {\"Get/Set Contract interaction\"} </h4>\n  //       <button onClick={connectWalletHandler}>{connButtonText}</button>\n  //       <div>\n  //         <h3>Address: {defaultAccount}</h3>\n  //       </div>\n  //       <form onSubmit={setHandler}>\n  //         <input id=\"setText\" type=\"text\" />\n  //         <button type={\"submit\"}> Update Contract </button>\n  //       </form>\n  //       <div>\n  //         <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n  //           {\" \"}\n  //           Get Current Contract Value{\" \"}\n  //         </button>\n  //       </div>\n  //       {currentContractVal}\n  //       {errorMessage}\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blockWallet,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        className: classes.btnWallet,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blockCenter,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0413\\u043E\\u0443 \\u0432 \\u043A\\u0430\\u043C\\u0435\\u043D\\u044C \\u043D\\u043E\\u0436\\u043D\\u0438\\u0446\\u044B \\u0431\\u0443\\u043C\\u0430\\u0433\\u0430!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockResult,\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            id: \"resOptionComp\",\n            children: computerOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            id: \"resOption\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleStorage, \"TZSpH2jnFmmTzG/R7lX3w+tUfzU=\");\n_c = SimpleStorage;\nexport default SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["React","useState","ethers","SimpleStorage_abi","classes","Button","jsxDEV","_jsxDEV","SimpleStorage","_s","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","currentContractVal","setCurrentContractVal","provider","setProvider","signer","setSigner","contract","setContract","option","setOptionNum","computerOption","setOptionCompNum","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","playGame","event","preventDefault","parseInt","target","attributes","values","value","txResponse","requestRandomNum","res","isWin","getResult","Promise","className","Container","children","blockWallet","onClick","btnWallet","fileName","_jsxFileName","lineNumber","columnNumber","Main","blockCenter","blockResult","id","blockChoice","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/SimpleStorage_abi.json\";\n\nimport classes from \"./SignDoc.module.css\";\nimport Button from \"../../components/Button/Button\";\n\nconst SimpleStorage = () => {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x24509385D9070687b1a816858D26Ae610053fd91\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [currentContractVal, setCurrentContractVal] = useState(false);\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const [option, setOptionNum] = useState(0);\n  const [computerOption, setOptionCompNum] = useState(0);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n\n    setContract(tempContract);\n    console.log(contract);\n  };\n\n  const playGame = async (event) => {\n    event.preventDefault();\n\n    let option = parseInt(event.target.attributes.values.value);\n\n    if (contract != null) {\n      const txResponse = await contract.requestRandomNum();\n      //   const txReceipt = txResponse.wait(1);\n\n      console.log(txResponse);\n      const res = await contract.playGame(option);\n\n      const isWin = await contract.getResult();\n      console.log(res.Promise);\n      if (isWin && res != null) {\n        setOptionNum(option + 1);\n      } else {\n        setOptionCompNum(computerOption + 1);\n      }\n\n      //   console.log(res);\n      //   getOption();\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h4> {\"Get/Set Contract interaction\"} </h4>\n  //       <button onClick={connectWalletHandler}>{connButtonText}</button>\n  //       <div>\n  //         <h3>Address: {defaultAccount}</h3>\n  //       </div>\n  //       <form onSubmit={setHandler}>\n  //         <input id=\"setText\" type=\"text\" />\n  //         <button type={\"submit\"}> Update Contract </button>\n  //       </form>\n  //       <div>\n  //         <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n  //           {\" \"}\n  //           Get Current Contract Value{\" \"}\n  //         </button>\n  //       </div>\n  //       {currentContractVal}\n  //       {errorMessage}\n  //     </div>\n  //   );\n  return (\n    <div className={classes.Container}>\n      <div className={classes.blockWallet}>\n        <button onClick={connectWalletHandler} className={classes.btnWallet}>\n          {connButtonText}\n        </button>\n        <h5> {defaultAccount}</h5>\n      </div>\n      <div className={classes.Main}>\n        <div className={classes.blockCenter}>\n          <h1>Гоу в камень ножницы бумага!</h1>\n\n          <div className={classes.blockResult}>\n            <h6 id=\"resOptionComp\">{computerOption}</h6>\n            <br />\n            <h6>:</h6>\n            <br />\n            <h6 id=\"resOption\">{option}</h6>\n          </div>\n          <div className={classes.blockChoice}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}