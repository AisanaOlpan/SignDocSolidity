{"ast":null,"code":"var _jsxFileName = \"/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\nimport classes from \"./MainPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorage = () => {\n  _s();\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xac70134Be2F185Fdb0547bcbA934677d78811460\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n  const getData = async () => {\n    // console.log(typeof defaultAccount);\n\n    if (contract == null) {\n      return;\n    }\n    const txSign = await contract.signDocument();\n    let isWitelist = document.getElementById(\"witelist\");\n\n    // const txResponse = await contract.getWhiteList();\n    let addr;\n    if (typeof defaultAccount == typeof \"\") {\n      addr = defaultAccount;\n    } else {\n      addr = defaultAccount[0];\n    }\n    console.log(addr);\n    const isSign = contract.isSigned(addr);\n    if (isSign) {\n      let uid = Date.now();\n      // for (let i = 0; i < txResponse.length; i++) {\n      let div_ = document.createElement(\"div\");\n      div_.id = \"witelist_div\" + uid;\n      div_.className = classes.witelist_div;\n      isWitelist.appendChild(div_);\n      let isWitelist_div = document.getElementById(\"witelist_div\" + uid);\n      let h6 = document.createElement(\"h6\");\n      let img = document.createElement(\"img\");\n      h6.innerText = addr;\n      img.src = \"images/check.png\";\n      isWitelist_div.appendChild(h6);\n      isWitelist_div.appendChild(img);\n    }\n    // }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blockWallet,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnWallet,\n        children: [/*#__PURE__*/_jsxDEV(MetamaskIcon, {\n          functionWallet: connectWalletHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: connButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blockCenter,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0414\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0438 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockSigner,\n          id: \"witelist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blockChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        onClick: getData,\n        children: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleStorage, \"ictNCbmp0+ILFPlV8PvHWDJL4J8=\");\n_c = SimpleStorage;\nexport default SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["React","useState","ethers","SimpleStorage_abi","classes","jsxDEV","_jsxDEV","SimpleStorage","_s","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","getData","txSign","signDocument","isWitelist","document","getElementById","addr","isSign","isSigned","uid","Date","now","div_","createElement","id","className","witelist_div","appendChild","isWitelist_div","h6","img","innerText","src","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","Container","children","blockWallet","btnWallet","MetamaskIcon","functionWallet","fileName","_jsxFileName","lineNumber","columnNumber","Main","blockCenter","blockSigner","blockChoice","Button","onClick","_c","$RefreshReg$"],"sources":["/Users/ajsanaolpan/Desktop/HomeWork1/my-app/src/containers/main/SignDoc.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SimpleStorage_abi from \"./contracts/DocSign_abi.json\";\n\nimport classes from \"./MainPage.module.css\";\n\nconst SimpleStorage = () => {\n  // deploy simple storage contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0xac70134Be2F185Fdb0547bcbA934677d78811460\"; //\"0xB31dF1dac0BE3024AD5CC6b0298F347511F9e4F7\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  const getData = async () => {\n    // console.log(typeof defaultAccount);\n\n    if (contract == null) {\n      return;\n    }\n    const txSign = await contract.signDocument();\n\n    let isWitelist = document.getElementById(\"witelist\");\n\n    // const txResponse = await contract.getWhiteList();\n    let addr;\n    if (typeof defaultAccount == typeof \"\") {\n      addr = defaultAccount;\n    } else {\n      addr = defaultAccount[0];\n    }\n    console.log(addr);\n    const isSign = contract.isSigned(addr);\n    if (isSign) {\n      let uid = Date.now();\n      // for (let i = 0; i < txResponse.length; i++) {\n      let div_ = document.createElement(\"div\");\n      div_.id = \"witelist_div\" + uid;\n      div_.className = classes.witelist_div;\n      isWitelist.appendChild(div_);\n      let isWitelist_div = document.getElementById(\"witelist_div\" + uid);\n      let h6 = document.createElement(\"h6\");\n      let img = document.createElement(\"img\");\n      h6.innerText = addr;\n      img.src = \"images/check.png\";\n      isWitelist_div.appendChild(h6);\n      isWitelist_div.appendChild(img);\n    }\n    // }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n    // console.log(\"hehe\");\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum, 97);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n\n    setContract(tempContract);\n  };\n\n  return (\n    <div className={classes.Container}>\n      <div className={classes.blockWallet}>\n        <div className={classes.btnWallet}>\n          <MetamaskIcon functionWallet={connectWalletHandler} />\n          <p>{connButtonText}</p>\n        </div>\n        <h5> {defaultAccount}</h5>\n      </div>\n      <div className={classes.Main}>\n        <div className={classes.blockCenter}>\n          <h1>Договор подписи </h1>\n\n          <div className={classes.blockSigner} id=\"witelist\"></div>\n          <div className={classes.blockChoice}></div>\n        </div>\n        <button className={classes.Button} onClick={getData}>\n          Подписать\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}